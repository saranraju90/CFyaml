Description: “Creates ASG with Specified Min, Max, and desired capacity in each specified subnet”
Parameters:
  KeyName:
    Description: "EC2 instance key name"
    Type: String
  InstanceType:
    Description: "EC2 instance type"
    Type: String
  InstanceSecurityGroup:
    Description: "List of Security Group IDs"
    Type: List<AWS::EC2::SecurityGroup::Id>
  MaxSizeASG:
    Description: "Enter the Max Size for the ASG"
    Type: String
  MinSizeASG:
    Description: "Enter the Min Size for the ASG"
    Type: String
  DesiredCapacityASG:
    Description: "Enter the desired capacity for the ASG"
    Type: String
  VPCZoneIdentifier:
    Description: "List the Subnet Ids of the instances"
    Type: List<AWS::EC2::Subnet::Id>
Resources:
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: Saran Cfn Autoscaling Group
      Cooldown: 60
      DesiredCapacity:
        Ref: DesiredCapacityASG
      LaunchConfigurationName: !Ref LaunchConfig
      MaxSize:
        Ref: MaxSizeASG
      MinSize:
        Ref: MinSizeASG
      Tags:
        -
          Key: Name
          Value: Garretts Cfn ASG
          PropagateAtLaunch: 'true'
      VPCZoneIdentifier:
        Ref: VPCZoneIdentifier
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName:
        Ref: KeyName
      ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", HVM64 ]
      SecurityGroups:
        Ref: "InstanceSecurityGroup"
      InstanceType:
        Ref: "InstanceType"
      LaunchConfigurationName: SaranCfnLaunchConfiguration
Mappings:
  RegionMap:
    us-east-1:
      HVM64: "ami-0ff8a91507f77f867"
    us-west-1:
      HVM64: "ami-0bdb828fd58c52235"      
